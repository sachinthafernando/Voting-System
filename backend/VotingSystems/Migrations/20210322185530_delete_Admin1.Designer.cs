// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingSystems.Models;

namespace VotingSystems.Migrations
{
    [DbContext(typeof(VotingDBContext))]
    [Migration("20210322185530_delete_Admin1")]
    partial class delete_Admin1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VotingSystems.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateNo")
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("District_ID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.HasKey("CandidateID");

                    b.HasIndex("District_ID");

                    b.HasIndex("Party_ID");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("VotingSystems.Models.District", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("VotingSystems.Models.District_Party", b =>
                {
                    b.Property<int>("District_ID")
                        .HasColumnType("int");

                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.HasKey("District_ID", "Party_ID");

                    b.HasIndex("Party_ID");

                    b.ToTable("District_Parties");
                });

            modelBuilder.Entity("VotingSystems.Models.Division", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ED_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ED_ID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("VotingSystems.Models.GNDivision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PD_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PD_ID");

                    b.ToTable("GNDivisions");
                });

            modelBuilder.Entity("VotingSystems.Models.Party", b =>
                {
                    b.Property<int>("PartyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Color")
                        .HasColumnType("varbinary(200)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PartyID");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("VotingSystems.Models.Person", b =>
                {
                    b.Property<int>("NIC")
                        .HasColumnType("int");

                    b.Property<int>("GND")
                        .HasColumnType("int");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<bool>("Voted")
                        .HasColumnType("bit");

                    b.HasKey("NIC");

                    b.HasIndex("GND");

                    b.ToTable("People");
                });

            modelBuilder.Entity("VotingSystems.Models.Rank1Admin", b =>
                {
                    b.Property<int>("Rank1AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(22)");

                    b.HasKey("Rank1AdminID");

                    b.ToTable("Rank1Admin");
                });

            modelBuilder.Entity("VotingSystems.Models.Rank2Admin", b =>
                {
                    b.Property<int>("Rank2AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(22)");

                    b.HasKey("Rank2AdminID");

                    b.ToTable("Rank2Admin");
                });

            modelBuilder.Entity("VotingSystems.Models.Rank3Admin", b =>
                {
                    b.Property<int>("Rank3AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(22)");

                    b.HasKey("Rank3AdminID");

                    b.ToTable("Rank3Admin");
                });

            modelBuilder.Entity("VotingSystems.Models.Rank4Admin", b =>
                {
                    b.Property<int>("Rank4AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(22)");

                    b.Property<int?>("PersonDist")
                        .HasColumnType("int");

                    b.Property<int?>("PersonDiv")
                        .HasColumnType("int");

                    b.Property<string>("PollingCenter")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ScanScreen")
                        .HasColumnType("bit");

                    b.Property<bool?>("VoteScreen")
                        .HasColumnType("bit");

                    b.HasKey("Rank4AdminID");

                    b.ToTable("Rank4Admin");
                });

            modelBuilder.Entity("VotingSystems.Models.Vote", b =>
                {
                    b.Property<int>("VoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Party_ID")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personDist")
                        .HasColumnType("int");

                    b.Property<int>("personDiv")
                        .HasColumnType("int");

                    b.HasKey("VoteID");

                    b.HasIndex("Party_ID");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("VotingSystems.Models.VoteCan", b =>
                {
                    b.Property<int>("VoteCanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Candidate_ID")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personDist")
                        .HasColumnType("int");

                    b.Property<int>("personDiv")
                        .HasColumnType("int");

                    b.HasKey("VoteCanID");

                    b.HasIndex("Candidate_ID");

                    b.ToTable("VoteCan");
                });

            modelBuilder.Entity("VotingSystems.Models.Candidate", b =>
                {
                    b.HasOne("VotingSystems.Models.District", "District")
                        .WithMany("Candidates")
                        .HasForeignKey("District_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VotingSystems.Models.Party", "Party")
                        .WithMany("Candidates")
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("VotingSystems.Models.District_Party", b =>
                {
                    b.HasOne("VotingSystems.Models.District", "District")
                        .WithMany("District_Parties")
                        .HasForeignKey("District_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VotingSystems.Models.Party", "Party")
                        .WithMany("District_Parties")
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("VotingSystems.Models.Division", b =>
                {
                    b.HasOne("VotingSystems.Models.District", "District")
                        .WithMany("Divisions")
                        .HasForeignKey("ED_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("VotingSystems.Models.GNDivision", b =>
                {
                    b.HasOne("VotingSystems.Models.Division", "Division")
                        .WithMany("GNDivisions")
                        .HasForeignKey("PD_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("VotingSystems.Models.Person", b =>
                {
                    b.HasOne("VotingSystems.Models.GNDivision", "GNDivision")
                        .WithMany("People")
                        .HasForeignKey("GND")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GNDivision");
                });

            modelBuilder.Entity("VotingSystems.Models.Vote", b =>
                {
                    b.HasOne("VotingSystems.Models.Party", "Party")
                        .WithMany("Votes")
                        .HasForeignKey("Party_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Party");
                });

            modelBuilder.Entity("VotingSystems.Models.VoteCan", b =>
                {
                    b.HasOne("VotingSystems.Models.Candidate", "Candidate")
                        .WithMany("VoteCandidates")
                        .HasForeignKey("Candidate_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("VotingSystems.Models.Candidate", b =>
                {
                    b.Navigation("VoteCandidates");
                });

            modelBuilder.Entity("VotingSystems.Models.District", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("District_Parties");

                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("VotingSystems.Models.Division", b =>
                {
                    b.Navigation("GNDivisions");
                });

            modelBuilder.Entity("VotingSystems.Models.GNDivision", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("VotingSystems.Models.Party", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("District_Parties");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
